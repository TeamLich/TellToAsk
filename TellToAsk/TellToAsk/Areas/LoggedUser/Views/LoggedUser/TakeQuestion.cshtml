@model TellToAsk.Areas.LoggedUser.Models.AnswerModel

@(Html.Kendo().Grid<TellToAsk.Areas.LoggedUser.Models.QuestionModel>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.QuestionId).Visible(false);
        columns.Bound(p => p.Text).ClientTemplate(
        "#= Text.length > 10 ? (Text.substring(0, 10).concat('...')) : Text #"
).Groupable(false);
        columns.Bound(p => p.Category.Name);
        columns.Command(command => command.Custom("Answer").Click("showDetails"));

    })
    .Groupable()
    .Pageable()
    .Sortable()
    .Scrollable()
    .Filterable()
    .DataSource(dataSource => dataSource
    .Ajax()
        .Read(read => read.Action("GetTargetedQuestions", "LoggedUser")))
)



@(Html.Kendo().Window().Name("Details")
    .Title("Answer Question")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(300)
)

<script type="text/x-kendo-template" id="template">

    <div id="details-container">
        <em class="break-word">#= Text #</em>

        @*@using (Ajax.BeginForm("AnswerToQuestion", new AjaxOptions
        {
            UpdateTargetId = "error-holder",
            InsertionMode = InsertionMode.Replace
        }))
        {
                <input type="hidden" name="QuestionId" value="#= QuestionId #" />

                @Html.TextArea("Comment", string.Empty, 10, 55, null)

                    <input type="submit" class="btn btn-success" value="Answer" />
        }*@
      
        @*<div id="error-holder"></div>*@

        @using (Html.BeginForm("AnswerToQuestion", "LoggedUser"))
        {
            if (@Model.QuestionId == 0)
            {
                <input type="hidden" name="QuestionId" value="#= QuestionId #" />
            <input type="hidden" name="Text" value="#= Text #" />
            }
            else
            {
                <input type="hidden" name="QuestionId" value="@(Model.QuestionId)" />
            <input type="hidden" name="Text" value="@(Model.Text)" />
            }
            

                 <div class="control-group">
            @*@Html.LabelFor(model => model.Comment, new { @class = "control-label" })*@
            <div class="controls">
                @Html.EditorFor(model => model.Comment)
                @Html.ValidationMessageFor(model => model.Comment, null, new { @class = "help-inline" })
            </div>
        </div>
            <input type="submit" class="btn btn-success" value="Answer" />
        }
    </div>
</script>

<script>
    $( document ).ready(function() {

        var val = @(Model.QuestionId);
        var questText = "@(Model.Text)"
         questTextObj = { Text: questText}
        debugger;
        if (val != 0) {
            var detailsTemplate = kendo.template($("#template").html());
            var wnd = $("#Details").data("kendoWindow");

            wnd.content(detailsTemplate(questTextObj));
            wnd.center().open();
        }
    });
</script>

<script type="text/javascript">
   

   

    

    function showDetails(e) {
        e.preventDefault();
        var detailsTemplate = kendo.template($("#template").html());
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#Details").data("kendoWindow");

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }
   
</script>
@if (Model != null)
{
    <script type="text/javascript">
       
    </script>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
