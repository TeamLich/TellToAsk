@model TellToAsk.Model.ApplicationUser

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>UserModel</legend>

        <div class="control-group">
            @Html.LabelFor(model => model.UserName, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.UserName)
                @Html.ValidationMessageFor(model => model.UserName, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.BirthDate, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.BirthDate)
                @Html.ValidationMessageFor(model => model.BirthDate, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(model => model.Gender, (IEnumerable<SelectListItem>)ViewBag.Genders)
                @Html.ValidationMessageFor(model => model.Gender, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Points, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Points)
                @Html.ValidationMessageFor(model => model.Points, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Roles, new { @class = "control-label" })
            <div class="controls">
                <ul>
                    @foreach (var role in Model.Roles)
                    {
                        <li>@role.Role.Name</li>
                    }
                </ul>
                @Ajax.ActionLink("Edit Roles", "EditRoles", "Users", new { id = Model.Id }, new AjaxOptions()
                {
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "edit-roles"
                })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Save" class="btn" />
        </div>
    </fieldset>
}

<div id="edit-roles"></div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

